	.text	
	.globl		main
main:
	subu		$sp, $sp, 8
	sw		$t0, 4($sp)
	sw		$t2, 8($sp)
	jal		func
	lw		$t0, 4($sp)
	lw		$t2, 8($sp)
	addu		$sp, $sp, 8
	move		$t0, $v0
	li		$v0, 1
	move		$a0, $t0
	syscall	
	li		$v0, 4
	la		$a0, _nl
	syscall	
	lw		$t0, a
	li		$v0, 1
	move		$a0, $t0
	syscall	
	li		$v0, 4
	la		$a0, _nl
	syscall	
	lw		$t0, b
	li		$v0, 1
	move		$a0, $t0
	syscall	
	li		$v0, 4
	la		$a0, _nl
	syscall	
	subu		$sp, $sp, 8
	sw		$t0, 4($sp)
	sw		$t2, 8($sp)
	jal		func
	lw		$t0, 4($sp)
	lw		$t2, 8($sp)
	addu		$sp, $sp, 8
	move		$t0, $v0
	li		$t1, 2
	addi		$t3, $zero, 0
	addi		$t5, $zero, 1
L1:	slt		$t4, $t3, $t1
	beq		$t4, $zero, L2
	mul		$t5, $t5, $t0
	addi		$t3, $t3, 1
	j		L1
L2:
	sw		$t5, c
	lw		$t0, c
	li		$v0, 1
	move		$a0, $t0
	syscall	
	li		$v0, 4
	la		$a0, _nl
	syscall	
	li		$v0, 10
	syscall	
func:
	subu		$sp, $sp, 4
	sw		$t2, 4($sp)
	sw		$ra, ($sp)
	li		$t0, 1
	sw		$t0, a
	li		$t0, 2
	sw		$t0, b
	lw		$t0, a
	lw		$t1, b
	add		$t2, $t0, $t1
	move		$v0, $t2
	lw		$ra, ($sp)
	lw		$t2, 4($sp)
	addu		$sp, $sp, 4
	jr		$ra
	.data	
_nl:	.asciiz		"\n"
	.align		2
space:	.asciiz		" "
	.align		2
true:	.asciiz		"true"
	.align		2
false:	.asciiz		"false"
	.align		2
c:	.word		0
a:	.word		0
b:	.word		0
