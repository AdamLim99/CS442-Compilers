State 39 conflicts: 1 shift/reduce


Grammar

    0 $accept: Prog $end

    1 Prog: Declarations StmtSeq

    2 Declarations: Dec Declarations
    3             | %empty

    4 $@1: %empty

    5 Dec: Int Ident $@1 ';'

    6 StmtSeq: Stmt StmtSeq
    7        | %empty

    8 EList: Expr
    9      | Expr ',' EList

   10 IDList: Id
   11       | Id ',' IDList

   12 Stmt: FOR '(' Stmt BExpr ';' Stmt ')' '{' StmtSeq '}'
   13     | Write '(' EList ')' ';'
   14     | Read '(' IDList ')' ';'
   15     | Write Expr ';'
   16     | Id '=' Expr ';'
   17     | WHILE '(' BExpr ')' '{' StmtSeq '}'
   18     | IF '(' BExpr ')' '{' StmtSeq '}'
   19     | IF '(' BExpr ')' '{' StmtSeq '}' ELSE '{' StmtSeq '}'
   20     | printS '(' Expr ')' ';'
   21     | printL '(' Expr ')' ';'

   22 BExpr: Expr notEQ Expr
   23      | Expr EQ Expr
   24      | Expr setGE Term
   25      | Expr setLE Term
   26      | Expr '>' Term
   27      | Expr '<' Term

   28 Expr: Expr '^' Term
   29     | Expr BitOr Term
   30     | Expr '-' Term
   31     | Expr '+' Term
   32     | Term

   33 Term: Term BitAnd Factor
   34     | Term '%' Factor
   35     | Term '/' Factor
   36     | Term '*' Factor
   37     | Factor

   38 Factor: '!' Factor
   39       | '(' Expr ')'
   40       | '-' Factor
   41       | IntLit
   42       | Ident

   43 Id: Ident


Terminals, with rules where they appear

$end (0) 0
'!' (33) 38
'%' (37) 34
'(' (40) 12 13 14 17 18 19 20 21 39
')' (41) 12 13 14 17 18 19 20 21 39
'*' (42) 36
'+' (43) 31
',' (44) 9 11
'-' (45) 30 40
'/' (47) 35
';' (59) 5 12 13 14 15 16 20 21
'<' (60) 27
'=' (61) 16
'>' (62) 26
'^' (94) 28
'{' (123) 12 17 18 19
'}' (125) 12 17 18 19
error (256)
Ident (258) 5 42 43
IntLit (259) 41
Int (260) 5
Write (261) 13 15
IF (262) 18 19
ELSE (263) 19
WHILE (264) 17
FOR (265) 12
EQ (266) 23
BitAnd (267) 33
BitOr (268) 29
setLE (269) 25
setGE (270) 24
notEQ (271) 22
printL (272) 21
printS (273) 20
Read (274) 14


Nonterminals, with rules where they appear

$accept (36)
    on left: 0
Prog (37)
    on left: 1, on right: 0
Declarations (38)
    on left: 2 3, on right: 1 2
Dec (39)
    on left: 5, on right: 2
$@1 (40)
    on left: 4, on right: 5
StmtSeq (41)
    on left: 6 7, on right: 1 6 12 17 18 19
EList (42)
    on left: 8 9, on right: 9 13
IDList (43)
    on left: 10 11, on right: 11 14
Stmt (44)
    on left: 12 13 14 15 16 17 18 19 20 21, on right: 6 12
BExpr (45)
    on left: 22 23 24 25 26 27, on right: 12 17 18 19
Expr (46)
    on left: 28 29 30 31 32, on right: 8 9 15 16 20 21 22 23 24 25
    26 27 28 29 30 31 39
Term (47)
    on left: 33 34 35 36 37, on right: 24 25 26 27 28 29 30 31 32 33
    34 35 36
Factor (48)
    on left: 38 39 40 41 42, on right: 33 34 35 36 37 38 40
Id (49)
    on left: 43, on right: 10 11 16


State 0

    0 $accept: . Prog $end

    Int  shift, and go to state 1

    $default  reduce using rule 3 (Declarations)

    Prog          go to state 2
    Declarations  go to state 3
    Dec           go to state 4


State 1

    5 Dec: Int . Ident $@1 ';'

    Ident  shift, and go to state 5


State 2

    0 $accept: Prog . $end

    $end  shift, and go to state 6


State 3

    1 Prog: Declarations . StmtSeq

    Ident   shift, and go to state 7
    Write   shift, and go to state 8
    IF      shift, and go to state 9
    WHILE   shift, and go to state 10
    FOR     shift, and go to state 11
    printL  shift, and go to state 12
    printS  shift, and go to state 13
    Read    shift, and go to state 14

    $default  reduce using rule 7 (StmtSeq)

    StmtSeq  go to state 15
    Stmt     go to state 16
    Id       go to state 17


State 4

    2 Declarations: Dec . Declarations

    Int  shift, and go to state 1

    $default  reduce using rule 3 (Declarations)

    Declarations  go to state 18
    Dec           go to state 4


State 5

    5 Dec: Int Ident . $@1 ';'

    $default  reduce using rule 4 ($@1)

    $@1  go to state 19


State 6

    0 $accept: Prog $end .

    $default  accept


State 7

   43 Id: Ident .

    $default  reduce using rule 43 (Id)


State 8

   13 Stmt: Write . '(' EList ')' ';'
   15     | Write . Expr ';'

    Ident   shift, and go to state 20
    IntLit  shift, and go to state 21
    '('     shift, and go to state 22
    '-'     shift, and go to state 23
    '!'     shift, and go to state 24

    Expr    go to state 25
    Term    go to state 26
    Factor  go to state 27


State 9

   18 Stmt: IF . '(' BExpr ')' '{' StmtSeq '}'
   19     | IF . '(' BExpr ')' '{' StmtSeq '}' ELSE '{' StmtSeq '}'

    '('  shift, and go to state 28


State 10

   17 Stmt: WHILE . '(' BExpr ')' '{' StmtSeq '}'

    '('  shift, and go to state 29


State 11

   12 Stmt: FOR . '(' Stmt BExpr ';' Stmt ')' '{' StmtSeq '}'

    '('  shift, and go to state 30


State 12

   21 Stmt: printL . '(' Expr ')' ';'

    '('  shift, and go to state 31


State 13

   20 Stmt: printS . '(' Expr ')' ';'

    '('  shift, and go to state 32


State 14

   14 Stmt: Read . '(' IDList ')' ';'

    '('  shift, and go to state 33


State 15

    1 Prog: Declarations StmtSeq .

    $default  reduce using rule 1 (Prog)


State 16

    6 StmtSeq: Stmt . StmtSeq

    Ident   shift, and go to state 7
    Write   shift, and go to state 8
    IF      shift, and go to state 9
    WHILE   shift, and go to state 10
    FOR     shift, and go to state 11
    printL  shift, and go to state 12
    printS  shift, and go to state 13
    Read    shift, and go to state 14

    $default  reduce using rule 7 (StmtSeq)

    StmtSeq  go to state 34
    Stmt     go to state 16
    Id       go to state 17


State 17

   16 Stmt: Id . '=' Expr ';'

    '='  shift, and go to state 35


State 18

    2 Declarations: Dec Declarations .

    $default  reduce using rule 2 (Declarations)


State 19

    5 Dec: Int Ident $@1 . ';'

    ';'  shift, and go to state 36


State 20

   42 Factor: Ident .

    $default  reduce using rule 42 (Factor)


State 21

   41 Factor: IntLit .

    $default  reduce using rule 41 (Factor)


State 22

   13 Stmt: Write '(' . EList ')' ';'
   39 Factor: '(' . Expr ')'

    Ident   shift, and go to state 20
    IntLit  shift, and go to state 21
    '('     shift, and go to state 37
    '-'     shift, and go to state 23
    '!'     shift, and go to state 24

    EList   go to state 38
    Expr    go to state 39
    Term    go to state 26
    Factor  go to state 27


State 23

   40 Factor: '-' . Factor

    Ident   shift, and go to state 20
    IntLit  shift, and go to state 21
    '('     shift, and go to state 37
    '-'     shift, and go to state 23
    '!'     shift, and go to state 24

    Factor  go to state 40


State 24

   38 Factor: '!' . Factor

    Ident   shift, and go to state 20
    IntLit  shift, and go to state 21
    '('     shift, and go to state 37
    '-'     shift, and go to state 23
    '!'     shift, and go to state 24

    Factor  go to state 41


State 25

   15 Stmt: Write Expr . ';'
   28 Expr: Expr . '^' Term
   29     | Expr . BitOr Term
   30     | Expr . '-' Term
   31     | Expr . '+' Term

    BitOr  shift, and go to state 42
    ';'    shift, and go to state 43
    '^'    shift, and go to state 44
    '-'    shift, and go to state 45
    '+'    shift, and go to state 46


State 26

   32 Expr: Term .
   33 Term: Term . BitAnd Factor
   34     | Term . '%' Factor
   35     | Term . '/' Factor
   36     | Term . '*' Factor

    BitAnd  shift, and go to state 47
    '%'     shift, and go to state 48
    '/'     shift, and go to state 49
    '*'     shift, and go to state 50

    $default  reduce using rule 32 (Expr)


State 27

   37 Term: Factor .

    $default  reduce using rule 37 (Term)


State 28

   18 Stmt: IF '(' . BExpr ')' '{' StmtSeq '}'
   19     | IF '(' . BExpr ')' '{' StmtSeq '}' ELSE '{' StmtSeq '}'

    Ident   shift, and go to state 20
    IntLit  shift, and go to state 21
    '('     shift, and go to state 37
    '-'     shift, and go to state 23
    '!'     shift, and go to state 24

    BExpr   go to state 51
    Expr    go to state 52
    Term    go to state 26
    Factor  go to state 27


State 29

   17 Stmt: WHILE '(' . BExpr ')' '{' StmtSeq '}'

    Ident   shift, and go to state 20
    IntLit  shift, and go to state 21
    '('     shift, and go to state 37
    '-'     shift, and go to state 23
    '!'     shift, and go to state 24

    BExpr   go to state 53
    Expr    go to state 52
    Term    go to state 26
    Factor  go to state 27


State 30

   12 Stmt: FOR '(' . Stmt BExpr ';' Stmt ')' '{' StmtSeq '}'

    Ident   shift, and go to state 7
    Write   shift, and go to state 8
    IF      shift, and go to state 9
    WHILE   shift, and go to state 10
    FOR     shift, and go to state 11
    printL  shift, and go to state 12
    printS  shift, and go to state 13
    Read    shift, and go to state 14

    Stmt  go to state 54
    Id    go to state 17


State 31

   21 Stmt: printL '(' . Expr ')' ';'

    Ident   shift, and go to state 20
    IntLit  shift, and go to state 21
    '('     shift, and go to state 37
    '-'     shift, and go to state 23
    '!'     shift, and go to state 24

    Expr    go to state 55
    Term    go to state 26
    Factor  go to state 27


State 32

   20 Stmt: printS '(' . Expr ')' ';'

    Ident   shift, and go to state 20
    IntLit  shift, and go to state 21
    '('     shift, and go to state 37
    '-'     shift, and go to state 23
    '!'     shift, and go to state 24

    Expr    go to state 56
    Term    go to state 26
    Factor  go to state 27


State 33

   14 Stmt: Read '(' . IDList ')' ';'

    Ident  shift, and go to state 7

    IDList  go to state 57
    Id      go to state 58


State 34

    6 StmtSeq: Stmt StmtSeq .

    $default  reduce using rule 6 (StmtSeq)


State 35

   16 Stmt: Id '=' . Expr ';'

    Ident   shift, and go to state 20
    IntLit  shift, and go to state 21
    '('     shift, and go to state 37
    '-'     shift, and go to state 23
    '!'     shift, and go to state 24

    Expr    go to state 59
    Term    go to state 26
    Factor  go to state 27


State 36

    5 Dec: Int Ident $@1 ';' .

    $default  reduce using rule 5 (Dec)


State 37

   39 Factor: '(' . Expr ')'

    Ident   shift, and go to state 20
    IntLit  shift, and go to state 21
    '('     shift, and go to state 37
    '-'     shift, and go to state 23
    '!'     shift, and go to state 24

    Expr    go to state 60
    Term    go to state 26
    Factor  go to state 27


State 38

   13 Stmt: Write '(' EList . ')' ';'

    ')'  shift, and go to state 61


State 39

    8 EList: Expr .
    9      | Expr . ',' EList
   28 Expr: Expr . '^' Term
   29     | Expr . BitOr Term
   30     | Expr . '-' Term
   31     | Expr . '+' Term
   39 Factor: '(' Expr . ')'

    BitOr  shift, and go to state 42
    ','    shift, and go to state 62
    ')'    shift, and go to state 63
    '^'    shift, and go to state 44
    '-'    shift, and go to state 45
    '+'    shift, and go to state 46

    ')'  [reduce using rule 8 (EList)]


State 40

   40 Factor: '-' Factor .

    $default  reduce using rule 40 (Factor)


State 41

   38 Factor: '!' Factor .

    $default  reduce using rule 38 (Factor)


State 42

   29 Expr: Expr BitOr . Term

    Ident   shift, and go to state 20
    IntLit  shift, and go to state 21
    '('     shift, and go to state 37
    '-'     shift, and go to state 23
    '!'     shift, and go to state 24

    Term    go to state 64
    Factor  go to state 27


State 43

   15 Stmt: Write Expr ';' .

    $default  reduce using rule 15 (Stmt)


State 44

   28 Expr: Expr '^' . Term

    Ident   shift, and go to state 20
    IntLit  shift, and go to state 21
    '('     shift, and go to state 37
    '-'     shift, and go to state 23
    '!'     shift, and go to state 24

    Term    go to state 65
    Factor  go to state 27


State 45

   30 Expr: Expr '-' . Term

    Ident   shift, and go to state 20
    IntLit  shift, and go to state 21
    '('     shift, and go to state 37
    '-'     shift, and go to state 23
    '!'     shift, and go to state 24

    Term    go to state 66
    Factor  go to state 27


State 46

   31 Expr: Expr '+' . Term

    Ident   shift, and go to state 20
    IntLit  shift, and go to state 21
    '('     shift, and go to state 37
    '-'     shift, and go to state 23
    '!'     shift, and go to state 24

    Term    go to state 67
    Factor  go to state 27


State 47

   33 Term: Term BitAnd . Factor

    Ident   shift, and go to state 20
    IntLit  shift, and go to state 21
    '('     shift, and go to state 37
    '-'     shift, and go to state 23
    '!'     shift, and go to state 24

    Factor  go to state 68


State 48

   34 Term: Term '%' . Factor

    Ident   shift, and go to state 20
    IntLit  shift, and go to state 21
    '('     shift, and go to state 37
    '-'     shift, and go to state 23
    '!'     shift, and go to state 24

    Factor  go to state 69


State 49

   35 Term: Term '/' . Factor

    Ident   shift, and go to state 20
    IntLit  shift, and go to state 21
    '('     shift, and go to state 37
    '-'     shift, and go to state 23
    '!'     shift, and go to state 24

    Factor  go to state 70


State 50

   36 Term: Term '*' . Factor

    Ident   shift, and go to state 20
    IntLit  shift, and go to state 21
    '('     shift, and go to state 37
    '-'     shift, and go to state 23
    '!'     shift, and go to state 24

    Factor  go to state 71


State 51

   18 Stmt: IF '(' BExpr . ')' '{' StmtSeq '}'
   19     | IF '(' BExpr . ')' '{' StmtSeq '}' ELSE '{' StmtSeq '}'

    ')'  shift, and go to state 72


State 52

   22 BExpr: Expr . notEQ Expr
   23      | Expr . EQ Expr
   24      | Expr . setGE Term
   25      | Expr . setLE Term
   26      | Expr . '>' Term
   27      | Expr . '<' Term
   28 Expr: Expr . '^' Term
   29     | Expr . BitOr Term
   30     | Expr . '-' Term
   31     | Expr . '+' Term

    EQ     shift, and go to state 73
    BitOr  shift, and go to state 42
    setLE  shift, and go to state 74
    setGE  shift, and go to state 75
    notEQ  shift, and go to state 76
    '>'    shift, and go to state 77
    '<'    shift, and go to state 78
    '^'    shift, and go to state 44
    '-'    shift, and go to state 45
    '+'    shift, and go to state 46


State 53

   17 Stmt: WHILE '(' BExpr . ')' '{' StmtSeq '}'

    ')'  shift, and go to state 79


State 54

   12 Stmt: FOR '(' Stmt . BExpr ';' Stmt ')' '{' StmtSeq '}'

    Ident   shift, and go to state 20
    IntLit  shift, and go to state 21
    '('     shift, and go to state 37
    '-'     shift, and go to state 23
    '!'     shift, and go to state 24

    BExpr   go to state 80
    Expr    go to state 52
    Term    go to state 26
    Factor  go to state 27


State 55

   21 Stmt: printL '(' Expr . ')' ';'
   28 Expr: Expr . '^' Term
   29     | Expr . BitOr Term
   30     | Expr . '-' Term
   31     | Expr . '+' Term

    BitOr  shift, and go to state 42
    ')'    shift, and go to state 81
    '^'    shift, and go to state 44
    '-'    shift, and go to state 45
    '+'    shift, and go to state 46


State 56

   20 Stmt: printS '(' Expr . ')' ';'
   28 Expr: Expr . '^' Term
   29     | Expr . BitOr Term
   30     | Expr . '-' Term
   31     | Expr . '+' Term

    BitOr  shift, and go to state 42
    ')'    shift, and go to state 82
    '^'    shift, and go to state 44
    '-'    shift, and go to state 45
    '+'    shift, and go to state 46


State 57

   14 Stmt: Read '(' IDList . ')' ';'

    ')'  shift, and go to state 83


State 58

   10 IDList: Id .
   11       | Id . ',' IDList

    ','  shift, and go to state 84

    $default  reduce using rule 10 (IDList)


State 59

   16 Stmt: Id '=' Expr . ';'
   28 Expr: Expr . '^' Term
   29     | Expr . BitOr Term
   30     | Expr . '-' Term
   31     | Expr . '+' Term

    BitOr  shift, and go to state 42
    ';'    shift, and go to state 85
    '^'    shift, and go to state 44
    '-'    shift, and go to state 45
    '+'    shift, and go to state 46


State 60

   28 Expr: Expr . '^' Term
   29     | Expr . BitOr Term
   30     | Expr . '-' Term
   31     | Expr . '+' Term
   39 Factor: '(' Expr . ')'

    BitOr  shift, and go to state 42
    ')'    shift, and go to state 63
    '^'    shift, and go to state 44
    '-'    shift, and go to state 45
    '+'    shift, and go to state 46


State 61

   13 Stmt: Write '(' EList ')' . ';'

    ';'  shift, and go to state 86


State 62

    9 EList: Expr ',' . EList

    Ident   shift, and go to state 20
    IntLit  shift, and go to state 21
    '('     shift, and go to state 37
    '-'     shift, and go to state 23
    '!'     shift, and go to state 24

    EList   go to state 87
    Expr    go to state 88
    Term    go to state 26
    Factor  go to state 27


State 63

   39 Factor: '(' Expr ')' .

    $default  reduce using rule 39 (Factor)


State 64

   29 Expr: Expr BitOr Term .
   33 Term: Term . BitAnd Factor
   34     | Term . '%' Factor
   35     | Term . '/' Factor
   36     | Term . '*' Factor

    BitAnd  shift, and go to state 47
    '%'     shift, and go to state 48
    '/'     shift, and go to state 49
    '*'     shift, and go to state 50

    $default  reduce using rule 29 (Expr)


State 65

   28 Expr: Expr '^' Term .
   33 Term: Term . BitAnd Factor
   34     | Term . '%' Factor
   35     | Term . '/' Factor
   36     | Term . '*' Factor

    BitAnd  shift, and go to state 47
    '%'     shift, and go to state 48
    '/'     shift, and go to state 49
    '*'     shift, and go to state 50

    $default  reduce using rule 28 (Expr)


State 66

   30 Expr: Expr '-' Term .
   33 Term: Term . BitAnd Factor
   34     | Term . '%' Factor
   35     | Term . '/' Factor
   36     | Term . '*' Factor

    BitAnd  shift, and go to state 47
    '%'     shift, and go to state 48
    '/'     shift, and go to state 49
    '*'     shift, and go to state 50

    $default  reduce using rule 30 (Expr)


State 67

   31 Expr: Expr '+' Term .
   33 Term: Term . BitAnd Factor
   34     | Term . '%' Factor
   35     | Term . '/' Factor
   36     | Term . '*' Factor

    BitAnd  shift, and go to state 47
    '%'     shift, and go to state 48
    '/'     shift, and go to state 49
    '*'     shift, and go to state 50

    $default  reduce using rule 31 (Expr)


State 68

   33 Term: Term BitAnd Factor .

    $default  reduce using rule 33 (Term)


State 69

   34 Term: Term '%' Factor .

    $default  reduce using rule 34 (Term)


State 70

   35 Term: Term '/' Factor .

    $default  reduce using rule 35 (Term)


State 71

   36 Term: Term '*' Factor .

    $default  reduce using rule 36 (Term)


State 72

   18 Stmt: IF '(' BExpr ')' . '{' StmtSeq '}'
   19     | IF '(' BExpr ')' . '{' StmtSeq '}' ELSE '{' StmtSeq '}'

    '{'  shift, and go to state 89


State 73

   23 BExpr: Expr EQ . Expr

    Ident   shift, and go to state 20
    IntLit  shift, and go to state 21
    '('     shift, and go to state 37
    '-'     shift, and go to state 23
    '!'     shift, and go to state 24

    Expr    go to state 90
    Term    go to state 26
    Factor  go to state 27


State 74

   25 BExpr: Expr setLE . Term

    Ident   shift, and go to state 20
    IntLit  shift, and go to state 21
    '('     shift, and go to state 37
    '-'     shift, and go to state 23
    '!'     shift, and go to state 24

    Term    go to state 91
    Factor  go to state 27


State 75

   24 BExpr: Expr setGE . Term

    Ident   shift, and go to state 20
    IntLit  shift, and go to state 21
    '('     shift, and go to state 37
    '-'     shift, and go to state 23
    '!'     shift, and go to state 24

    Term    go to state 92
    Factor  go to state 27


State 76

   22 BExpr: Expr notEQ . Expr

    Ident   shift, and go to state 20
    IntLit  shift, and go to state 21
    '('     shift, and go to state 37
    '-'     shift, and go to state 23
    '!'     shift, and go to state 24

    Expr    go to state 93
    Term    go to state 26
    Factor  go to state 27


State 77

   26 BExpr: Expr '>' . Term

    Ident   shift, and go to state 20
    IntLit  shift, and go to state 21
    '('     shift, and go to state 37
    '-'     shift, and go to state 23
    '!'     shift, and go to state 24

    Term    go to state 94
    Factor  go to state 27


State 78

   27 BExpr: Expr '<' . Term

    Ident   shift, and go to state 20
    IntLit  shift, and go to state 21
    '('     shift, and go to state 37
    '-'     shift, and go to state 23
    '!'     shift, and go to state 24

    Term    go to state 95
    Factor  go to state 27


State 79

   17 Stmt: WHILE '(' BExpr ')' . '{' StmtSeq '}'

    '{'  shift, and go to state 96


State 80

   12 Stmt: FOR '(' Stmt BExpr . ';' Stmt ')' '{' StmtSeq '}'

    ';'  shift, and go to state 97


State 81

   21 Stmt: printL '(' Expr ')' . ';'

    ';'  shift, and go to state 98


State 82

   20 Stmt: printS '(' Expr ')' . ';'

    ';'  shift, and go to state 99


State 83

   14 Stmt: Read '(' IDList ')' . ';'

    ';'  shift, and go to state 100


State 84

   11 IDList: Id ',' . IDList

    Ident  shift, and go to state 7

    IDList  go to state 101
    Id      go to state 58


State 85

   16 Stmt: Id '=' Expr ';' .

    $default  reduce using rule 16 (Stmt)


State 86

   13 Stmt: Write '(' EList ')' ';' .

    $default  reduce using rule 13 (Stmt)


State 87

    9 EList: Expr ',' EList .

    $default  reduce using rule 9 (EList)


State 88

    8 EList: Expr .
    9      | Expr . ',' EList
   28 Expr: Expr . '^' Term
   29     | Expr . BitOr Term
   30     | Expr . '-' Term
   31     | Expr . '+' Term

    BitOr  shift, and go to state 42
    ','    shift, and go to state 62
    '^'    shift, and go to state 44
    '-'    shift, and go to state 45
    '+'    shift, and go to state 46

    $default  reduce using rule 8 (EList)


State 89

   18 Stmt: IF '(' BExpr ')' '{' . StmtSeq '}'
   19     | IF '(' BExpr ')' '{' . StmtSeq '}' ELSE '{' StmtSeq '}'

    Ident   shift, and go to state 7
    Write   shift, and go to state 8
    IF      shift, and go to state 9
    WHILE   shift, and go to state 10
    FOR     shift, and go to state 11
    printL  shift, and go to state 12
    printS  shift, and go to state 13
    Read    shift, and go to state 14

    $default  reduce using rule 7 (StmtSeq)

    StmtSeq  go to state 102
    Stmt     go to state 16
    Id       go to state 17


State 90

   23 BExpr: Expr EQ Expr .
   28 Expr: Expr . '^' Term
   29     | Expr . BitOr Term
   30     | Expr . '-' Term
   31     | Expr . '+' Term

    BitOr  shift, and go to state 42
    '^'    shift, and go to state 44
    '-'    shift, and go to state 45
    '+'    shift, and go to state 46

    $default  reduce using rule 23 (BExpr)


State 91

   25 BExpr: Expr setLE Term .
   33 Term: Term . BitAnd Factor
   34     | Term . '%' Factor
   35     | Term . '/' Factor
   36     | Term . '*' Factor

    BitAnd  shift, and go to state 47
    '%'     shift, and go to state 48
    '/'     shift, and go to state 49
    '*'     shift, and go to state 50

    $default  reduce using rule 25 (BExpr)


State 92

   24 BExpr: Expr setGE Term .
   33 Term: Term . BitAnd Factor
   34     | Term . '%' Factor
   35     | Term . '/' Factor
   36     | Term . '*' Factor

    BitAnd  shift, and go to state 47
    '%'     shift, and go to state 48
    '/'     shift, and go to state 49
    '*'     shift, and go to state 50

    $default  reduce using rule 24 (BExpr)


State 93

   22 BExpr: Expr notEQ Expr .
   28 Expr: Expr . '^' Term
   29     | Expr . BitOr Term
   30     | Expr . '-' Term
   31     | Expr . '+' Term

    BitOr  shift, and go to state 42
    '^'    shift, and go to state 44
    '-'    shift, and go to state 45
    '+'    shift, and go to state 46

    $default  reduce using rule 22 (BExpr)


State 94

   26 BExpr: Expr '>' Term .
   33 Term: Term . BitAnd Factor
   34     | Term . '%' Factor
   35     | Term . '/' Factor
   36     | Term . '*' Factor

    BitAnd  shift, and go to state 47
    '%'     shift, and go to state 48
    '/'     shift, and go to state 49
    '*'     shift, and go to state 50

    $default  reduce using rule 26 (BExpr)


State 95

   27 BExpr: Expr '<' Term .
   33 Term: Term . BitAnd Factor
   34     | Term . '%' Factor
   35     | Term . '/' Factor
   36     | Term . '*' Factor

    BitAnd  shift, and go to state 47
    '%'     shift, and go to state 48
    '/'     shift, and go to state 49
    '*'     shift, and go to state 50

    $default  reduce using rule 27 (BExpr)


State 96

   17 Stmt: WHILE '(' BExpr ')' '{' . StmtSeq '}'

    Ident   shift, and go to state 7
    Write   shift, and go to state 8
    IF      shift, and go to state 9
    WHILE   shift, and go to state 10
    FOR     shift, and go to state 11
    printL  shift, and go to state 12
    printS  shift, and go to state 13
    Read    shift, and go to state 14

    $default  reduce using rule 7 (StmtSeq)

    StmtSeq  go to state 103
    Stmt     go to state 16
    Id       go to state 17


State 97

   12 Stmt: FOR '(' Stmt BExpr ';' . Stmt ')' '{' StmtSeq '}'

    Ident   shift, and go to state 7
    Write   shift, and go to state 8
    IF      shift, and go to state 9
    WHILE   shift, and go to state 10
    FOR     shift, and go to state 11
    printL  shift, and go to state 12
    printS  shift, and go to state 13
    Read    shift, and go to state 14

    Stmt  go to state 104
    Id    go to state 17


State 98

   21 Stmt: printL '(' Expr ')' ';' .

    $default  reduce using rule 21 (Stmt)


State 99

   20 Stmt: printS '(' Expr ')' ';' .

    $default  reduce using rule 20 (Stmt)


State 100

   14 Stmt: Read '(' IDList ')' ';' .

    $default  reduce using rule 14 (Stmt)


State 101

   11 IDList: Id ',' IDList .

    $default  reduce using rule 11 (IDList)


State 102

   18 Stmt: IF '(' BExpr ')' '{' StmtSeq . '}'
   19     | IF '(' BExpr ')' '{' StmtSeq . '}' ELSE '{' StmtSeq '}'

    '}'  shift, and go to state 105


State 103

   17 Stmt: WHILE '(' BExpr ')' '{' StmtSeq . '}'

    '}'  shift, and go to state 106


State 104

   12 Stmt: FOR '(' Stmt BExpr ';' Stmt . ')' '{' StmtSeq '}'

    ')'  shift, and go to state 107


State 105

   18 Stmt: IF '(' BExpr ')' '{' StmtSeq '}' .
   19     | IF '(' BExpr ')' '{' StmtSeq '}' . ELSE '{' StmtSeq '}'

    ELSE  shift, and go to state 108

    $default  reduce using rule 18 (Stmt)


State 106

   17 Stmt: WHILE '(' BExpr ')' '{' StmtSeq '}' .

    $default  reduce using rule 17 (Stmt)


State 107

   12 Stmt: FOR '(' Stmt BExpr ';' Stmt ')' . '{' StmtSeq '}'

    '{'  shift, and go to state 109


State 108

   19 Stmt: IF '(' BExpr ')' '{' StmtSeq '}' ELSE . '{' StmtSeq '}'

    '{'  shift, and go to state 110


State 109

   12 Stmt: FOR '(' Stmt BExpr ';' Stmt ')' '{' . StmtSeq '}'

    Ident   shift, and go to state 7
    Write   shift, and go to state 8
    IF      shift, and go to state 9
    WHILE   shift, and go to state 10
    FOR     shift, and go to state 11
    printL  shift, and go to state 12
    printS  shift, and go to state 13
    Read    shift, and go to state 14

    $default  reduce using rule 7 (StmtSeq)

    StmtSeq  go to state 111
    Stmt     go to state 16
    Id       go to state 17


State 110

   19 Stmt: IF '(' BExpr ')' '{' StmtSeq '}' ELSE '{' . StmtSeq '}'

    Ident   shift, and go to state 7
    Write   shift, and go to state 8
    IF      shift, and go to state 9
    WHILE   shift, and go to state 10
    FOR     shift, and go to state 11
    printL  shift, and go to state 12
    printS  shift, and go to state 13
    Read    shift, and go to state 14

    $default  reduce using rule 7 (StmtSeq)

    StmtSeq  go to state 112
    Stmt     go to state 16
    Id       go to state 17


State 111

   12 Stmt: FOR '(' Stmt BExpr ';' Stmt ')' '{' StmtSeq . '}'

    '}'  shift, and go to state 113


State 112

   19 Stmt: IF '(' BExpr ')' '{' StmtSeq '}' ELSE '{' StmtSeq . '}'

    '}'  shift, and go to state 114


State 113

   12 Stmt: FOR '(' Stmt BExpr ';' Stmt ')' '{' StmtSeq '}' .

    $default  reduce using rule 12 (Stmt)


State 114

   19 Stmt: IF '(' BExpr ')' '{' StmtSeq '}' ELSE '{' StmtSeq '}' .

    $default  reduce using rule 19 (Stmt)
